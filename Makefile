#
# Î»::Makefile
#
# For further information see `README.md`.

PREFIX?= /bin
TARGET?= ~/.local
SOURCE?= vhc
NULL  ?= /dev/null
VIMRC  = ~/.vimrc

INSTALL= $(TARGET)$(PREFIX)
VIMCONF= echo 'map <F2> :!vhc' >> $(VIMRC)

ifneq (,$(DESTDIR))
TARGET =$(DESTDIR)
endif


CMD = "\\e[1m%-10s\\e[0m%s\n"
STR = "\\e[0;2;3m%s\\e[0m\n"
HLP = sed -E 's/(`.*`)/\\e[1m\1\\e[0m/'


DEFAULT: help



backup:
	@\
	cp $(VIMRC) $(VIMRC)_$(shell date +'%Y%m%d%H%M%S')


#
install: backup # Installs application.
	@\
	mkdir   -p           $(INSTALL) 2>$(NULL) ; \
	install -D $(SOURCE) $(INSTALL)/$(SOURCE) ; \
	chmod   +x           $(INSTALL)/$(SOURCE) ; \
	echo Installed into '$(INSTALL)/$(SOURCE)'

	@\
	LINE=$$(cat $(VIMRC)"" | grep -n "$(SOURCE)"\
	| awk -F':' '''{ print($$1); }'); (( sed -i \
	"$${LINE},1 s/^[\"| ]*//g" $(VIMRC)))

	@\
	VIM=$$(cat $(VIMRC)"" | grep "$(SOURCE)") ; \
	[ -e $(INSTALL)/$(SOURCE) -a -z "$${VIM}" ] \
	&& ((echo 'Configuring VIM';  $(VIMCONF) )) \
	|| ((echo "VIM configured with '$${VIM}'"))



uninstall: backup # Uninstalls application.
	@\
	rm -Rf $(INSTALL)/$(SOURCE); \
	echo "'$(INSTALL)/$(SOURCE)' removed."

	@\
	LINE=$$(cat $(VIMRC) | grep -n "$(SOURCE)" | awk -F':' '{print($$1)}'); \
	sed -i "$${LINE},1 s/^/\" /" $(VIMRC)


#
help: # Shows this help.
	@\
	echo """"""""""""""""""""""""""" \
	$$(awk 'BEGIN {   FS=":.*?#"   } \
	/^(\w+:.*|)#/ {                  \
	gsub("^( : |)#( |)", """""""" ); \
	LEN=length($$2); COND=(LEN < 1); \
	FORMAT=(COND ? $(STR) : $(CMD)); \
	printf(FORMAT, $$1, """"""$$2 ); \
	}' $(MAKEFILE_LIST) | ($(HLP)))"


#
samples: # Build tests and EXAMPLES.md using possible style options.
	@\
	mkdir -p tests; \
	NUM(){ cat vhc | grep -n "$${1}OPTIONS" | awk -F':' '{print($$1)}'; }; \
	INI=$$(NUM "# "); \
	END=$$(NUM "#/"); \
	MAX=$$(cat vhc | wc -l); \
	GET=$$((MAX - INI - 1)); \
	LEN=$$((END - INI - 3)); \
	TARGET=EXAMPLES.md \
	OPTIONS=$$(cat vhc \
	| tail -n"$${GET}" \
	| head -n"$${LEN}" \
	| sed -E 's/^\s+([a-z0-9\-\|\*]*)\).*$$/\1/; s/\|/ /g; s/\*//g'); \
	echo "# VIM Header Composer Examples\n\n" \
	"> **Warning:** this file was generated by the execution of \`make samples\`, manual changes possible will be overwritten.\n\n" \
	"Instead of using the characters and the standard format you can set the string to process using styles as seen below.\n" \
	> "$${TARGET}"; \
	txt='Example using '; \
	for opt in $$OPTIONS; \
	do  TEST=tests/testing_style_$${opt}.sh; \
		echo "Creating test \e[1m$${opt}\e[0m.."; \
		echo "---\n\n### Using '$${opt}'\n" >> "$${TARGET}"; \
		echo "#!/usr/bin/env bash\n" \
		     "\n./vhc <<< \"vhc:""$${opt}"";$${txt}'$${opt}'.\"" > "$${TEST}"; \
		echo "$${txt}\`$$(tail -n1 "$${TEST}")\`.\n\`\`\`" >> "$${TARGET}"; \
		echo "vhc:$${opt};$${txt}'$${opt}'." | ./vhc >  "$${TEST}.result"; \
		echo "$$(cat "$${TEST}.result")\n\`\`\`\n"   >> "$${TARGET}"; \
	done


#
.PHONY: tests
tests: # Execute tests.
	@\
	gMD5(){ cat $$1 | md5sum | awk '{print($$1)}'; };\
	for each in ./tests/*.sh; \
	do  bash "$${each}" >.test ; \
		TESTS=$$(echo $${each} | sed -E 's/_/ /g; s/\.sh$$//g; s/^.*\///'); \
		printf "%*s%s\r%s" 5 "" "$${TESTS}"; \
		VALID=$$(gMD5   ".test"); \
		CHECK=$$(gMD5 $${each}.result); \
		VALUE="\e[31mFail\e[0m"; \
		[ "$${VALID}" = "$${CHECK}" ] \
		&& VALUE="\e[32mDone\e[0m" \
		|| FAIL=true; \
		echo "$${VALUE}"; \
	done; \
	rm -Rf .test; \
	[ -z $${FAIL} ] || exit 1



clear: # Clear.
	@\
	rm -Rf tests .test

#
%:
	@:
